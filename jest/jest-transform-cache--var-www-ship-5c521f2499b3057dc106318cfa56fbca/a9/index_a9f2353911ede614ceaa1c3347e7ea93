/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var cov_avmtbm7k6 = function () {var path = '/var/www/ship/app/components/ComingSoon/index.js',hash = '3227ee4689c41b70190c54fd25917ca17e6742b8',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/var/www/ship/app/components/ComingSoon/index.js', statementMap: { '0': { start: { line: 12, column: 16 }, end: { line: 23, column: 1 } }, '1': { start: { line: 28, column: 4 }, end: { line: 33, column: 6 } }, '2': { start: { line: 37, column: 0 }, end: { line: 39, column: 2 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 27, column: 2 }, end: { line: 27, column: 3 } }, loc: { start: { line: 27, column: 11 }, end: { line: 34, column: 3 } } } }, branchMap: {}, s: { '0': 0, '1': 0, '2': 0 }, f: { '0': 0 }, b: {}, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _templateObject = _taggedTemplateLiteral(['\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\ntext-align: center;\n\nh1 {\n  font-size: 5em;\n}\n'], ['\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\ntext-align: center;\n\nh1 {\n  font-size: 5em;\n}\n']);







var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_styledComponents = require('styled-components'); /* istanbul ignore next */var _styledComponents2 = _interopRequireDefault(_styledComponents);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}function _taggedTemplateLiteral(strings, raw) {return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));}  /**

omingSoon

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */var Wrapper = /* istanbul ignore next */(++cov_avmtbm7k6.s[0], /* istanbul ignore next */_styledComponents2.default.div(_templateObject)); /* istanbul ignore next */var











ComingSoon = function (_React$Component) {_inherits(ComingSoon, _React$Component);function ComingSoon() {_classCallCheck(this, ComingSoon);return _possibleConstructorReturn(this, (ComingSoon.__proto__ || Object.getPrototypeOf(ComingSoon)).apply(this, arguments));}_createClass(ComingSoon, [{ key: 'render', 
    value: function render() {/* istanbul ignore next */++cov_avmtbm7k6.f[0];++cov_avmtbm7k6.s[1];
      return (
        /* istanbul ignore next */_react2.default.createElement(Wrapper, /* istanbul ignore next */null,
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'h1', /* istanbul ignore next */null, /* istanbul ignore next */'BRAINS AND SPACE'),
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'h2', /* istanbul ignore next */null, /* istanbul ignore next */'coming soon')));


    } }]);return ComingSoon;}( /* istanbul ignore next */_react2.default.Component); /* istanbul ignore next */++cov_avmtbm7k6.s[2];


ComingSoon.propTypes = {}; /* istanbul ignore next */exports.default =



ComingSoon;